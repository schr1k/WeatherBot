import asyncio
import logging
from datetime import datetime

from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters.command import Command

from config import config
from api import get_weather_by_city

bot = Bot(token=config.TOKEN)
dp = Dispatcher()

logging.basicConfig(level=logging.INFO)


@dp.message(Command('start'))
async def start(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç, —è –º–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –æ –ø–æ–≥–æ–¥–µ.\n'
                         '–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞.')


@dp.message()
async def get_weather(message: Message):
    weather = await get_weather_by_city(message.text)
    if weather['cod'] == '404' and weather['message'] == 'city not found':
        await message.answer('–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.\n'
                             '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.')
    else:
        city = message.text
        await message.answer(f'üåá –°–µ–π—á–∞—Å –≤ –≥–æ—Ä–æ–¥–µ {city} {weather["weather"][0]["description"]}.\n'
                             f'üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(weather["main"]["temp"])} ¬∞C.\n'
                             f'üí® –í–µ—Ç–µ—Ä: {round(weather["wind"]["speed"], 1)} –º/c.\n'
                             f'üí¶ –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather["main"]["humidity"]} %.\n'
                             f'üß≠ –î–∞–≤–ª–µ–Ω–∏–µ: {round(weather["main"]["pressure"] * 0.750062)} –º–º —Ä—Ç. —Å—Ç.')


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
